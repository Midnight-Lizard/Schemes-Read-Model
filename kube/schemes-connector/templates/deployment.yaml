apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app: {{ template "name" . }}
  template:
    metadata:
      annotations:
        checksum/values: {{ .Files.Get "values.yaml" | sha256sum }}
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.affinity.weight }}
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        {{- range .Values.affinity.apps }}
                        - {{ . }}
                        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image | quote }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
              protocol: TCP
          command: ["bash"]
          args:
            - -c
            - "mkdir ./runtime-config && sed s/POSTGRES_PASSWORD/${POSTGRES_PASSWORD}/ <./config/connector.properties >./runtime-config/connector.properties && ./bin/connect-standalone.sh ./config/worker.properties ./runtime-config/connector.properties"
          volumeMounts:
            - name: config-volume
              mountPath: /kafka/config
            - name: persistent-storage
              mountPath: /usr/tmp
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - curl -v --silent http://localhost:8083/connectors/postgresql/status 2>&1 | grep \"RUNNING.*RUNNING\" 1>/dev/null
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresPasswordSecret.secretName }}
                  key: {{ .Values.postgresPasswordSecret.secretKey }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "name" . }}-config
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaimName }}
      securityContext:
        fsGroup: 0
        runAsUser: 0